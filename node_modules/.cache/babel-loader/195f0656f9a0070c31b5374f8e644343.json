{"ast":null,"code":"import _slicedToArray from \"/Users/semeongetachew/Desktop/react-udemy-vintage-tech-extra-fetures/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/semeongetachew/Desktop/react-udemy-vintage-tech-extra-fetures/src/pages/Checkout.js\";\nimport React from \"react\";\nimport { CartContext } from \"../context/cart\";\nimport { UserContext } from \"../context/user\";\nimport { useHistory } from \"react-router-dom\";\nimport EmptyCart from \"../components/Cart/EmptyCart\";\nimport { CardElement, StripeProvider, Elements, injectStripe } from \"react-stripe-elements\";\nimport submitOrder from \"../strapi/submitOrder\";\n\nfunction Checkout(props) {\n  const _React$useContext = React.useContext(CartContext),\n        cart = _React$useContext.cart,\n        total = _React$useContext.total,\n        clearCart = _React$useContext.clearCart;\n\n  const _React$useContext2 = React.useContext(UserContext),\n        user = _React$useContext2.user,\n        showAlert = _React$useContext2.showAlert,\n        hideAlert = _React$useContext2.hideAlert,\n        alert = _React$useContext2.alert;\n\n  const history = useHistory(); // state values\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        error = _React$useState4[0],\n        setError = _React$useState4[1];\n\n  const isEmpty = !name || alert.show;\n\n  async function handleSubmit(e) {\n    showAlert({\n      msg: \"submitting order... please wait\"\n    });\n    e.preventDefault();\n    const response = await props.stripe.createToken().catch(error => console.log(error));\n    const token = response.token;\n\n    if (token) {\n      setError(\"\");\n      const id = token.id;\n      let order = await submitOrder({\n        name: name,\n        total: total,\n        items: cart,\n        stripeTokenId: id,\n        userToken: user.token\n      });\n\n      if (order) {\n        showAlert({\n          msg: \"your order is complete\"\n        });\n        clearCart();\n        history.push(\"/\");\n        return;\n      } else {\n        showAlert({\n          msg: \"there was an error with your order. please try again!\",\n          type: \"danger\"\n        });\n      }\n    } else {\n      hideAlert();\n      setError(response.error.message);\n    }\n  }\n\n  if (cart.length < 1) return React.createElement(EmptyCart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n  return React.createElement(\"section\", {\n    className: \"section form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"section-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"checkout\"), React.createElement(\"form\", {\n    className: \"checkout-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"order total : \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"$\", total)), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"stripe-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"card-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Credit or Debit Cart\"), React.createElement(\"p\", {\n    className: \"stripe-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Test using this credit card : \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"4242 4242 4242 4242\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"enter any 5 digits for the zip code\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \"enter any 3 digits for the CVC\")), React.createElement(CardElement, {\n    className: \"card-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), error && React.createElement(\"p\", {\n    className: \"form-empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, error), isEmpty ? React.createElement(\"p\", {\n    className: \"form-empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"please fill out name field\") : React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"submit\")));\n}\n\nconst CardForm = injectStripe(Checkout);\n\nconst StripeWrapper = () => {\n  return React.createElement(StripeProvider, {\n    apiKey: \"pk_test_RmWPHoQAmlEf6RiOlsMRkEeJ00XzgNQe2k\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Elements, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(CardForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })));\n};\n\nexport default StripeWrapper;","map":{"version":3,"sources":["/Users/semeongetachew/Desktop/react-udemy-vintage-tech-extra-fetures/src/pages/Checkout.js"],"names":["React","CartContext","UserContext","useHistory","EmptyCart","CardElement","StripeProvider","Elements","injectStripe","submitOrder","Checkout","props","useContext","cart","total","clearCart","user","showAlert","hideAlert","alert","history","useState","name","setName","error","setError","isEmpty","show","handleSubmit","e","msg","preventDefault","response","stripe","createToken","catch","console","log","token","id","order","items","stripeTokenId","userToken","push","type","message","length","target","value","CardForm","StripeWrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CartContext } from \"../context/cart\";\nimport { UserContext } from \"../context/user\";\nimport { useHistory } from \"react-router-dom\";\nimport EmptyCart from \"../components/Cart/EmptyCart\";\nimport {\n  CardElement,\n  StripeProvider,\n  Elements,\n  injectStripe\n} from \"react-stripe-elements\";\nimport submitOrder from \"../strapi/submitOrder\";\n\nfunction Checkout(props) {\n  const { cart, total, clearCart } = React.useContext(CartContext);\n  const { user, showAlert, hideAlert, alert } = React.useContext(UserContext);\n  const history = useHistory();\n  // state values\n  const [name, setName] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const isEmpty = !name || alert.show;\n  async function handleSubmit(e) {\n    showAlert({ msg: \"submitting order... please wait\" });\n    e.preventDefault();\n    const response = await props.stripe\n      .createToken()\n      .catch(error => console.log(error));\n\n    const { token } = response;\n    if (token) {\n      setError(\"\");\n      const { id } = token;\n\n      let order = await submitOrder({\n        name: name,\n        total: total,\n        items: cart,\n        stripeTokenId: id,\n        userToken: user.token\n      });\n\n      if (order) {\n        showAlert({ msg: \"your order is complete\" });\n        clearCart();\n        history.push(\"/\");\n        return;\n      } else {\n        showAlert({\n          msg: \"there was an error with your order. please try again!\",\n          type: \"danger\"\n        });\n      }\n    } else {\n      hideAlert();\n      setError(response.error.message);\n    }\n  }\n  if (cart.length < 1) return <EmptyCart />;\n  return (\n    <section className=\"section form\">\n      <h2 className=\"section-title\">checkout</h2>\n      <form className=\"checkout-form\">\n        <h3>\n          order total : <span>${total}</span>\n        </h3>\n        {/* single input */}\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={e => {\n              setName(e.target.value);\n            }}\n          />\n        </div>\n        {/* end of single input */}\n        {/* card element */}\n        <div className=\"stripe-input\">\n          <label htmlFor=\"card-element\">Credit or Debit Cart</label>\n          <p className=\"stripe-info\">\n            Test using this credit card : <span>4242 4242 4242 4242</span>\n            <br />\n            enter any 5 digits for the zip code\n            <br />\n            enter any 3 digits for the CVC\n          </p>\n        </div>\n        {/* end of card element */}\n        {/* STRIPE ELEMENTS */}\n        <CardElement className=\"card-element\"></CardElement>\n        {/* stripe errors */}\n        {error && <p className=\"form-empty\">{error}</p>}\n        {/* empty value */}\n        {isEmpty ? (\n          <p className=\"form-empty\">please fill out name field</p>\n        ) : (\n          <button\n            type=\"submit\"\n            onClick={handleSubmit}\n            className=\"btn btn-primary btn-block\"\n          >\n            submit\n          </button>\n        )}\n      </form>\n    </section>\n  );\n}\nconst CardForm = injectStripe(Checkout);\n\nconst StripeWrapper = () => {\n  return (\n    <StripeProvider apiKey=\"pk_test_RmWPHoQAmlEf6RiOlsMRkEeJ00XzgNQe2k\">\n      <Elements>\n        <CardForm></CardForm>\n      </Elements>\n    </StripeProvider>\n  );\n};\n\nexport default StripeWrapper;\n"]},"metadata":{},"sourceType":"module"}