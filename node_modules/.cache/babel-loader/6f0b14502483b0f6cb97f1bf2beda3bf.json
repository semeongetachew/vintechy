{"ast":null,"code":"import _slicedToArray from \"/Users/semeongetachew/Desktop/vintechy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/semeongetachew/Desktop/vintechy/src/pages/Login.js\";\nimport React from \"react\"; // strapi function\n\nimport loginUser from \"../strapi/loginUser\";\nimport registerUser from \"../strapi/registerUser\"; //handle user\n\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/user\";\nexport default function Login() {\n  const history = useHistory(); // setup user context\n\n  const _React$useContext = React.useContext(UserContext),\n        userLogin = _React$useContext.userLogin,\n        alert = _React$useContext.alert,\n        showAlert = _React$useContext.showAlert; // state values\n\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        email = _React$useState2[0],\n        setEmail = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        password = _React$useState4[0],\n        setPassword = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"default\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        username = _React$useState6[0],\n        setUsername = _React$useState6[1];\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isMember = _React$useState8[0],\n        setIsMember = _React$useState8[1];\n\n  let isEmpty = !email || !password || !username || alert.show;\n\n  const toggleMember = () => {\n    setIsMember(prevMember => {\n      let isMember = !prevMember;\n      isMember ? setUsername(\"default\") : setUsername(\"\");\n      return isMember;\n    });\n  };\n\n  const handleSubmit = async e => {\n    showAlert({\n      msg: \"accessing user data. please wait...\"\n    }); // alert\n\n    e.preventDefault();\n    let response;\n\n    if (isMember) {\n      response = await loginUser({\n        email,\n        password\n      });\n    } else {\n      response = await registerUser({\n        email,\n        password,\n        username\n      });\n    }\n\n    if (response) {\n      const _response$data = response.data,\n            token = _response$data.jwt,\n            username = _response$data.user.username;\n      const newUser = {\n        token,\n        username\n      };\n      userLogin(newUser);\n      showAlert({\n        msg: \"you are logged in : \".concat(username, \". shop away my friend\")\n      });\n      history.push(\"/products\");\n    } else {\n      showAlert({\n        msg: \"there was an error. please try again...\",\n        type: \"danger\"\n      }); //  show alert\n    }\n  };\n\n  return React.createElement(\"section\", {\n    className: \"form section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"section-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, isMember ? \"sign in\" : \"register\"), React.createElement(\"form\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"email\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), !isMember && React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"username\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), isEmpty && React.createElement(\"p\", {\n    className: \"form-empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"please fill out all form fields\"), !isEmpty && React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-block btn-primary\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"p\", {\n    className: \"register-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, isMember ? \"need to register\" : \"already a member\", React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"click here\"))));\n}","map":{"version":3,"sources":["/Users/semeongetachew/Desktop/vintechy/src/pages/Login.js"],"names":["React","loginUser","registerUser","useHistory","UserContext","Login","history","useContext","userLogin","alert","showAlert","useState","email","setEmail","password","setPassword","username","setUsername","isMember","setIsMember","isEmpty","show","toggleMember","prevMember","handleSubmit","e","msg","preventDefault","response","data","token","jwt","user","newUser","push","type","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// strapi function\nimport loginUser from \"../strapi/loginUser\";\nimport registerUser from \"../strapi/registerUser\";\n//handle user\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/user\";\nexport default function Login() {\n  const history = useHistory();\n  // setup user context\n  const { userLogin, alert, showAlert } = React.useContext(UserContext);\n\n  // state values\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"default\");\n  const [isMember, setIsMember] = React.useState(true);\n\n  let isEmpty = !email || !password || !username || alert.show;\n\n  const toggleMember = () => {\n    setIsMember(prevMember => {\n      let isMember = !prevMember;\n      isMember ? setUsername(\"default\") : setUsername(\"\");\n      return isMember;\n    });\n  };\n\n  const handleSubmit = async e => {\n    showAlert({\n      msg: \"accessing user data. please wait...\"\n    });\n    // alert\n    e.preventDefault();\n    let response;\n    if (isMember) {\n      response = await loginUser({ email, password });\n    } else {\n      response = await registerUser({ email, password, username });\n    }\n\n    if (response) {\n      const {\n        jwt: token,\n        user: { username }\n      } = response.data;\n      const newUser = { token, username };\n      userLogin(newUser);\n      showAlert({\n        msg: `you are logged in : ${username}. shop away my friend`\n      });\n      history.push(\"/products\");\n    } else {\n      showAlert({\n        msg: \"there was an error. please try again...\",\n        type: \"danger\"\n      });\n      //  show alert\n    }\n  };\n\n  return (\n    <section className=\"form section\">\n      <h2 className=\"section-title\">{isMember ? \"sign in\" : \"register\"}</h2>\n      <form className=\"login-form\">\n        {/* single input */}\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </div>\n        {/* end of single input */}\n        {/* single input */}\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        {/* end of single input */}\n        {/* single input */}\n        {!isMember && (\n          <div className=\"form-control\">\n            <label htmlFor=\"username\">username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </div>\n        )}\n\n        {/* end of single input */}\n        {/* empty form text */}\n        {isEmpty && (\n          <p className=\"form-empty\">please fill out all form fields</p>\n        )}\n        {/* submit btn */}\n        {!isEmpty && (\n          <button\n            type=\"submit\"\n            className=\"btn btn-block btn-primary\"\n            onClick={handleSubmit}\n          >\n            submit\n          </button>\n        )}\n        {/* register link */}\n        <p className=\"register-link\">\n          {isMember ? \"need to register\" : \"already a member\"}\n          <button type=\"button\" onClick={toggleMember}>\n            click here\n          </button>\n        </p>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}